// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.1
// source: proto/netbookai/spawner/spawner.proto

package spawner

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MIGProfile int32

const (
	MIGProfile_UNKNOWN MIGProfile = 0
	MIGProfile_MIG1g   MIGProfile = 1
	MIGProfile_MIG2g   MIGProfile = 2
	MIGProfile_MIG3g   MIGProfile = 3
	MIGProfile_MIG4g   MIGProfile = 4
	MIGProfile_MIG7g   MIGProfile = 5
)

// Enum value maps for MIGProfile.
var (
	MIGProfile_name = map[int32]string{
		0: "UNKNOWN",
		1: "MIG1g",
		2: "MIG2g",
		3: "MIG3g",
		4: "MIG4g",
		5: "MIG7g",
	}
	MIGProfile_value = map[string]int32{
		"UNKNOWN": 0,
		"MIG1g":   1,
		"MIG2g":   2,
		"MIG3g":   3,
		"MIG4g":   4,
		"MIG7g":   5,
	}
)

func (x MIGProfile) Enum() *MIGProfile {
	p := new(MIGProfile)
	*p = x
	return p
}

func (x MIGProfile) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MIGProfile) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_netbookai_spawner_spawner_proto_enumTypes[0].Descriptor()
}

func (MIGProfile) Type() protoreflect.EnumType {
	return &file_proto_netbookai_spawner_spawner_proto_enumTypes[0]
}

func (x MIGProfile) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MIGProfile.Descriptor instead.
func (MIGProfile) EnumDescriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{0}
}

type CapacityType int32

const (
	CapacityType_TypeUKNOWN CapacityType = 0
	CapacityType_ONDEMAND   CapacityType = 1
	CapacityType_SPOT       CapacityType = 2
)

// Enum value maps for CapacityType.
var (
	CapacityType_name = map[int32]string{
		0: "TypeUKNOWN",
		1: "ONDEMAND",
		2: "SPOT",
	}
	CapacityType_value = map[string]int32{
		"TypeUKNOWN": 0,
		"ONDEMAND":   1,
		"SPOT":       2,
	}
)

func (x CapacityType) Enum() *CapacityType {
	p := new(CapacityType)
	*p = x
	return p
}

func (x CapacityType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CapacityType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_netbookai_spawner_spawner_proto_enumTypes[1].Descriptor()
}

func (CapacityType) Type() protoreflect.EnumType {
	return &file_proto_netbookai_spawner_spawner_proto_enumTypes[1]
}

func (x CapacityType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CapacityType.Descriptor instead.
func (CapacityType) EnumDescriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{1}
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{0}
}

type EchoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *EchoRequest) Reset() {
	*x = EchoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EchoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoRequest) ProtoMessage() {}

func (x *EchoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoRequest.ProtoReflect.Descriptor instead.
func (*EchoRequest) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{1}
}

func (x *EchoRequest) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type EchoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *EchoResponse) Reset() {
	*x = EchoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EchoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoResponse) ProtoMessage() {}

func (x *EchoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoResponse.ProtoReflect.Descriptor instead.
func (*EchoResponse) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{2}
}

func (x *EchoResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type NodeSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Instance         string            `protobuf:"bytes,2,opt,name=instance,proto3" json:"instance,omitempty"`
	DiskSize         int32             `protobuf:"varint,3,opt,name=diskSize,proto3" json:"diskSize,omitempty"`
	HostName         string            `protobuf:"bytes,4,opt,name=hostName,proto3" json:"hostName,omitempty"`
	State            string            `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	Uuid             string            `protobuf:"bytes,6,opt,name=uuid,proto3" json:"uuid,omitempty"`
	IpAddr           string            `protobuf:"bytes,7,opt,name=ipAddr,proto3" json:"ipAddr,omitempty"`
	Availabilityzone string            `protobuf:"bytes,8,opt,name=availabilityzone,proto3" json:"availabilityzone,omitempty"`
	ClusterId        string            `protobuf:"bytes,9,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	Labels           map[string]string `protobuf:"bytes,10,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	GpuEnabled       bool              `protobuf:"varint,11,opt,name=gpu_enabled,json=gpuEnabled,proto3" json:"gpu_enabled,omitempty"`
	Health           *Health           `protobuf:"bytes,12,opt,name=health,proto3" json:"health,omitempty"`
	MigProfile       MIGProfile        `protobuf:"varint,13,opt,name=migProfile,proto3,enum=spawner.MIGProfile" json:"migProfile,omitempty"`
	Count            int64             `protobuf:"varint,14,opt,name=count,proto3" json:"count,omitempty"`
	CapacityType     CapacityType      `protobuf:"varint,15,opt,name=capacityType,proto3,enum=spawner.CapacityType" json:"capacityType,omitempty"`
	SpotInstances    []string          `protobuf:"bytes,16,rep,name=spotInstances,proto3" json:"spotInstances,omitempty"`
	MachineType      string            `protobuf:"bytes,17,opt,name=machineType,proto3" json:"machineType,omitempty"`
}

func (x *NodeSpec) Reset() {
	*x = NodeSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeSpec) ProtoMessage() {}

func (x *NodeSpec) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeSpec.ProtoReflect.Descriptor instead.
func (*NodeSpec) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{3}
}

func (x *NodeSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NodeSpec) GetInstance() string {
	if x != nil {
		return x.Instance
	}
	return ""
}

func (x *NodeSpec) GetDiskSize() int32 {
	if x != nil {
		return x.DiskSize
	}
	return 0
}

func (x *NodeSpec) GetHostName() string {
	if x != nil {
		return x.HostName
	}
	return ""
}

func (x *NodeSpec) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *NodeSpec) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *NodeSpec) GetIpAddr() string {
	if x != nil {
		return x.IpAddr
	}
	return ""
}

func (x *NodeSpec) GetAvailabilityzone() string {
	if x != nil {
		return x.Availabilityzone
	}
	return ""
}

func (x *NodeSpec) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *NodeSpec) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *NodeSpec) GetGpuEnabled() bool {
	if x != nil {
		return x.GpuEnabled
	}
	return false
}

func (x *NodeSpec) GetHealth() *Health {
	if x != nil {
		return x.Health
	}
	return nil
}

func (x *NodeSpec) GetMigProfile() MIGProfile {
	if x != nil {
		return x.MigProfile
	}
	return MIGProfile_UNKNOWN
}

func (x *NodeSpec) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *NodeSpec) GetCapacityType() CapacityType {
	if x != nil {
		return x.CapacityType
	}
	return CapacityType_TypeUKNOWN
}

func (x *NodeSpec) GetSpotInstances() []string {
	if x != nil {
		return x.SpotInstances
	}
	return nil
}

func (x *NodeSpec) GetMachineType() string {
	if x != nil {
		return x.MachineType
	}
	return ""
}

type Issue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Description string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	ResourceIds []string `protobuf:"bytes,3,rep,name=resourceIds,proto3" json:"resourceIds,omitempty"`
}

func (x *Issue) Reset() {
	*x = Issue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Issue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Issue) ProtoMessage() {}

func (x *Issue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Issue.ProtoReflect.Descriptor instead.
func (*Issue) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{4}
}

func (x *Issue) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Issue) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Issue) GetResourceIds() []string {
	if x != nil {
		return x.ResourceIds
	}
	return nil
}

type Health struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Issue []*Issue `protobuf:"bytes,1,rep,name=issue,proto3" json:"issue,omitempty"`
}

func (x *Health) Reset() {
	*x = Health{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Health) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Health) ProtoMessage() {}

func (x *Health) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Health.ProtoReflect.Descriptor instead.
func (*Health) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{5}
}

func (x *Health) GetIssue() []*Issue {
	if x != nil {
		return x.Issue
	}
	return nil
}

type ClusterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider    string            `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Region      string            `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	AccountName string            `protobuf:"bytes,3,opt,name=accountName,proto3" json:"accountName,omitempty"`
	ClusterName string            `protobuf:"bytes,4,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	Node        *NodeSpec         `protobuf:"bytes,5,opt,name=node,proto3" json:"node,omitempty"`
	Labels      map[string]string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ClusterRequest) Reset() {
	*x = ClusterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterRequest) ProtoMessage() {}

func (x *ClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterRequest.ProtoReflect.Descriptor instead.
func (*ClusterRequest) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{6}
}

func (x *ClusterRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *ClusterRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ClusterRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *ClusterRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *ClusterRequest) GetNode() *NodeSpec {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *ClusterRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type GetClusterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider    string `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Region      string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	AccountName string `protobuf:"bytes,3,opt,name=accountName,proto3" json:"accountName,omitempty"`
	ClusterName string `protobuf:"bytes,4,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
}

func (x *GetClusterRequest) Reset() {
	*x = GetClusterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterRequest) ProtoMessage() {}

func (x *GetClusterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterRequest.ProtoReflect.Descriptor instead.
func (*GetClusterRequest) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{7}
}

func (x *GetClusterRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *GetClusterRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *GetClusterRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *GetClusterRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

type GetClustersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider    string `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Region      string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	AccountName string `protobuf:"bytes,3,opt,name=accountName,proto3" json:"accountName,omitempty"`
}

func (x *GetClustersRequest) Reset() {
	*x = GetClustersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClustersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClustersRequest) ProtoMessage() {}

func (x *GetClustersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClustersRequest.ProtoReflect.Descriptor instead.
func (*GetClustersRequest) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{8}
}

func (x *GetClustersRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *GetClustersRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *GetClustersRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

type ClusterSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ClusterId string      `protobuf:"bytes,2,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	NodeSpec  []*NodeSpec `protobuf:"bytes,3,rep,name=nodeSpec,proto3" json:"nodeSpec,omitempty"`
}

func (x *ClusterSpec) Reset() {
	*x = ClusterSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterSpec) ProtoMessage() {}

func (x *ClusterSpec) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterSpec.ProtoReflect.Descriptor instead.
func (*ClusterSpec) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{9}
}

func (x *ClusterSpec) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClusterSpec) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ClusterSpec) GetNodeSpec() []*NodeSpec {
	if x != nil {
		return x.NodeSpec
	}
	return nil
}

type GetClustersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clusters []*ClusterSpec `protobuf:"bytes,1,rep,name=clusters,proto3" json:"clusters,omitempty"`
}

func (x *GetClustersResponse) Reset() {
	*x = GetClustersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClustersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClustersResponse) ProtoMessage() {}

func (x *GetClustersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClustersResponse.ProtoReflect.Descriptor instead.
func (*GetClustersResponse) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{10}
}

func (x *GetClustersResponse) GetClusters() []*ClusterSpec {
	if x != nil {
		return x.Clusters
	}
	return nil
}

type ClusterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterName   string `protobuf:"bytes,1,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	NodeGroupName string `protobuf:"bytes,2,opt,name=nodeGroupName,proto3" json:"nodeGroupName,omitempty"`
	Error         string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ClusterResponse) Reset() {
	*x = ClusterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterResponse) ProtoMessage() {}

func (x *ClusterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterResponse.ProtoReflect.Descriptor instead.
func (*ClusterResponse) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{11}
}

func (x *ClusterResponse) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *ClusterResponse) GetNodeGroupName() string {
	if x != nil {
		return x.NodeGroupName
	}
	return ""
}

func (x *ClusterResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ClusterStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider    string `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Region      string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	AccountName string `protobuf:"bytes,3,opt,name=accountName,proto3" json:"accountName,omitempty"`
	ClusterName string `protobuf:"bytes,4,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
}

func (x *ClusterStatusRequest) Reset() {
	*x = ClusterStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterStatusRequest) ProtoMessage() {}

func (x *ClusterStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterStatusRequest.ProtoReflect.Descriptor instead.
func (*ClusterStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{12}
}

func (x *ClusterStatusRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *ClusterStatusRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ClusterStatusRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *ClusterStatusRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

type ClusterStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ClusterStatusResponse) Reset() {
	*x = ClusterStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterStatusResponse) ProtoMessage() {}

func (x *ClusterStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterStatusResponse.ProtoReflect.Descriptor instead.
func (*ClusterStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{13}
}

func (x *ClusterStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ClusterStatusResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type AddTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider    string `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Region      string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	ClusterName string `protobuf:"bytes,3,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
}

func (x *AddTokenRequest) Reset() {
	*x = AddTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTokenRequest) ProtoMessage() {}

func (x *AddTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTokenRequest.ProtoReflect.Descriptor instead.
func (*AddTokenRequest) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{14}
}

func (x *AddTokenRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *AddTokenRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *AddTokenRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

type AddTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *AddTokenResponse) Reset() {
	*x = AddTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTokenResponse) ProtoMessage() {}

func (x *AddTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTokenResponse.ProtoReflect.Descriptor instead.
func (*AddTokenResponse) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{15}
}

func (x *AddTokenResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AddTokenResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider    string `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Region      string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	AccountName string `protobuf:"bytes,3,opt,name=accountName,proto3" json:"accountName,omitempty"`
	ClusterName string `protobuf:"bytes,4,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
}

func (x *GetTokenRequest) Reset() {
	*x = GetTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenRequest) ProtoMessage() {}

func (x *GetTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenRequest.ProtoReflect.Descriptor instead.
func (*GetTokenRequest) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{16}
}

func (x *GetTokenRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *GetTokenRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *GetTokenRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *GetTokenRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

type GetTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token    string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Endpoint string `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Status   string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Error    string `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	CaData   string `protobuf:"bytes,5,opt,name=ca_data,json=caData,proto3" json:"ca_data,omitempty"`
}

func (x *GetTokenResponse) Reset() {
	*x = GetTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenResponse) ProtoMessage() {}

func (x *GetTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenResponse.ProtoReflect.Descriptor instead.
func (*GetTokenResponse) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{17}
}

func (x *GetTokenResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetTokenResponse) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *GetTokenResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetTokenResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetTokenResponse) GetCaData() string {
	if x != nil {
		return x.CaData
	}
	return ""
}

type AddRoute53RecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider    string `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Region      string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	AccountName string `protobuf:"bytes,3,opt,name=accountName,proto3" json:"accountName,omitempty"`
	DnsName     string `protobuf:"bytes,4,opt,name=dnsName,proto3" json:"dnsName,omitempty"`
	RecordName  string `protobuf:"bytes,5,opt,name=recordName,proto3" json:"recordName,omitempty"`
}

func (x *AddRoute53RecordRequest) Reset() {
	*x = AddRoute53RecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRoute53RecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRoute53RecordRequest) ProtoMessage() {}

func (x *AddRoute53RecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRoute53RecordRequest.ProtoReflect.Descriptor instead.
func (*AddRoute53RecordRequest) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{18}
}

func (x *AddRoute53RecordRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *AddRoute53RecordRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *AddRoute53RecordRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *AddRoute53RecordRequest) GetDnsName() string {
	if x != nil {
		return x.DnsName
	}
	return ""
}

func (x *AddRoute53RecordRequest) GetRecordName() string {
	if x != nil {
		return x.RecordName
	}
	return ""
}

type AddRoute53RecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *AddRoute53RecordResponse) Reset() {
	*x = AddRoute53RecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRoute53RecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRoute53RecordResponse) ProtoMessage() {}

func (x *AddRoute53RecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRoute53RecordResponse.ProtoReflect.Descriptor instead.
func (*AddRoute53RecordResponse) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{19}
}

func (x *AddRoute53RecordResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AddRoute53RecordResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type NodeSpawnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider    string    `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Region      string    `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	AccountName string    `protobuf:"bytes,3,opt,name=accountName,proto3" json:"accountName,omitempty"`
	ClusterName string    `protobuf:"bytes,4,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	NodeSpec    *NodeSpec `protobuf:"bytes,5,opt,name=nodeSpec,proto3" json:"nodeSpec,omitempty"`
}

func (x *NodeSpawnRequest) Reset() {
	*x = NodeSpawnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeSpawnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeSpawnRequest) ProtoMessage() {}

func (x *NodeSpawnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeSpawnRequest.ProtoReflect.Descriptor instead.
func (*NodeSpawnRequest) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{20}
}

func (x *NodeSpawnRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *NodeSpawnRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *NodeSpawnRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *NodeSpawnRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *NodeSpawnRequest) GetNodeSpec() *NodeSpec {
	if x != nil {
		return x.NodeSpec
	}
	return nil
}

type NodeSpawnResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *NodeSpawnResponse) Reset() {
	*x = NodeSpawnResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeSpawnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeSpawnResponse) ProtoMessage() {}

func (x *NodeSpawnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeSpawnResponse.ProtoReflect.Descriptor instead.
func (*NodeSpawnResponse) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{21}
}

func (x *NodeSpawnResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ClusterDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider    string `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Region      string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	AccountName string `protobuf:"bytes,3,opt,name=accountName,proto3" json:"accountName,omitempty"`
	ClusterName string `protobuf:"bytes,4,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	ForceDelete bool   `protobuf:"varint,5,opt,name=forceDelete,proto3" json:"forceDelete,omitempty"`
}

func (x *ClusterDeleteRequest) Reset() {
	*x = ClusterDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterDeleteRequest) ProtoMessage() {}

func (x *ClusterDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterDeleteRequest.ProtoReflect.Descriptor instead.
func (*ClusterDeleteRequest) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{22}
}

func (x *ClusterDeleteRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *ClusterDeleteRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ClusterDeleteRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *ClusterDeleteRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *ClusterDeleteRequest) GetForceDelete() bool {
	if x != nil {
		return x.ForceDelete
	}
	return false
}

type ClusterDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ClusterDeleteResponse) Reset() {
	*x = ClusterDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterDeleteResponse) ProtoMessage() {}

func (x *ClusterDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterDeleteResponse.ProtoReflect.Descriptor instead.
func (*ClusterDeleteResponse) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{23}
}

func (x *ClusterDeleteResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type NodeDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider      string `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Region        string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	AccountName   string `protobuf:"bytes,3,opt,name=accountName,proto3" json:"accountName,omitempty"`
	ClusterName   string `protobuf:"bytes,4,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	NodeGroupName string `protobuf:"bytes,5,opt,name=nodeGroupName,proto3" json:"nodeGroupName,omitempty"`
}

func (x *NodeDeleteRequest) Reset() {
	*x = NodeDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeDeleteRequest) ProtoMessage() {}

func (x *NodeDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeDeleteRequest.ProtoReflect.Descriptor instead.
func (*NodeDeleteRequest) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{24}
}

func (x *NodeDeleteRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *NodeDeleteRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *NodeDeleteRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *NodeDeleteRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *NodeDeleteRequest) GetNodeGroupName() string {
	if x != nil {
		return x.NodeGroupName
	}
	return ""
}

type NodeDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *NodeDeleteResponse) Reset() {
	*x = NodeDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeDeleteResponse) ProtoMessage() {}

func (x *NodeDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeDeleteResponse.ProtoReflect.Descriptor instead.
func (*NodeDeleteResponse) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{25}
}

func (x *NodeDeleteResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CreateVolumeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider         string            `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Region           string            `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	AccountName      string            `protobuf:"bytes,3,opt,name=accountName,proto3" json:"accountName,omitempty"`
	Availabilityzone string            `protobuf:"bytes,4,opt,name=availabilityzone,proto3" json:"availabilityzone,omitempty"`
	Volumetype       string            `protobuf:"bytes,5,opt,name=volumetype,proto3" json:"volumetype,omitempty"`
	Size             int64             `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	Snapshotid       string            `protobuf:"bytes,7,opt,name=snapshotid,proto3" json:"snapshotid,omitempty"`
	Labels           map[string]string `protobuf:"bytes,8,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SnapshotUri      string            `protobuf:"bytes,9,opt,name=snapshotUri,proto3" json:"snapshotUri,omitempty"`
	DeleteSnapshot   bool              `protobuf:"varint,10,opt,name=deleteSnapshot,proto3" json:"deleteSnapshot,omitempty"`
}

func (x *CreateVolumeRequest) Reset() {
	*x = CreateVolumeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVolumeRequest) ProtoMessage() {}

func (x *CreateVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVolumeRequest.ProtoReflect.Descriptor instead.
func (*CreateVolumeRequest) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{26}
}

func (x *CreateVolumeRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *CreateVolumeRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *CreateVolumeRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *CreateVolumeRequest) GetAvailabilityzone() string {
	if x != nil {
		return x.Availabilityzone
	}
	return ""
}

func (x *CreateVolumeRequest) GetVolumetype() string {
	if x != nil {
		return x.Volumetype
	}
	return ""
}

func (x *CreateVolumeRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *CreateVolumeRequest) GetSnapshotid() string {
	if x != nil {
		return x.Snapshotid
	}
	return ""
}

func (x *CreateVolumeRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *CreateVolumeRequest) GetSnapshotUri() string {
	if x != nil {
		return x.SnapshotUri
	}
	return ""
}

func (x *CreateVolumeRequest) GetDeleteSnapshot() bool {
	if x != nil {
		return x.DeleteSnapshot
	}
	return false
}

type CreateVolumeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// volume id is name
	Volumeid    string `protobuf:"bytes,1,opt,name=volumeid,proto3" json:"volumeid,omitempty"`
	Error       string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	ResourceUri string `protobuf:"bytes,3,opt,name=resource_uri,json=resourceUri,proto3" json:"resource_uri,omitempty"`
}

func (x *CreateVolumeResponse) Reset() {
	*x = CreateVolumeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVolumeResponse) ProtoMessage() {}

func (x *CreateVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVolumeResponse.ProtoReflect.Descriptor instead.
func (*CreateVolumeResponse) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{27}
}

func (x *CreateVolumeResponse) GetVolumeid() string {
	if x != nil {
		return x.Volumeid
	}
	return ""
}

func (x *CreateVolumeResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *CreateVolumeResponse) GetResourceUri() string {
	if x != nil {
		return x.ResourceUri
	}
	return ""
}

type DeleteVolumeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider    string `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Region      string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	AccountName string `protobuf:"bytes,3,opt,name=accountName,proto3" json:"accountName,omitempty"`
	Volumeid    string `protobuf:"bytes,4,opt,name=volumeid,proto3" json:"volumeid,omitempty"`
}

func (x *DeleteVolumeRequest) Reset() {
	*x = DeleteVolumeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVolumeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVolumeRequest) ProtoMessage() {}

func (x *DeleteVolumeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVolumeRequest.ProtoReflect.Descriptor instead.
func (*DeleteVolumeRequest) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{28}
}

func (x *DeleteVolumeRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *DeleteVolumeRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *DeleteVolumeRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *DeleteVolumeRequest) GetVolumeid() string {
	if x != nil {
		return x.Volumeid
	}
	return ""
}

type DeleteVolumeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deleted bool   `protobuf:"varint,1,opt,name=deleted,proto3" json:"deleted,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *DeleteVolumeResponse) Reset() {
	*x = DeleteVolumeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVolumeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVolumeResponse) ProtoMessage() {}

func (x *DeleteVolumeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVolumeResponse.ProtoReflect.Descriptor instead.
func (*DeleteVolumeResponse) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteVolumeResponse) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *DeleteVolumeResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type CreateSnapshotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider    string            `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Region      string            `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	AccountName string            `protobuf:"bytes,3,opt,name=accountName,proto3" json:"accountName,omitempty"`
	Volumeid    string            `protobuf:"bytes,4,opt,name=volumeid,proto3" json:"volumeid,omitempty"`
	Labels      map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CreateSnapshotRequest) Reset() {
	*x = CreateSnapshotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSnapshotRequest) ProtoMessage() {}

func (x *CreateSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSnapshotRequest.ProtoReflect.Descriptor instead.
func (*CreateSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{30}
}

func (x *CreateSnapshotRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *CreateSnapshotRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *CreateSnapshotRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *CreateSnapshotRequest) GetVolumeid() string {
	if x != nil {
		return x.Volumeid
	}
	return ""
}

func (x *CreateSnapshotRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type CreateSnapshotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Snapshotid string `protobuf:"bytes,1,opt,name=snapshotid,proto3" json:"snapshotid,omitempty"`
	// must retain tag for backward compatibilty, left in commet for reference
	// string error = 2;
	SnapshotUri string `protobuf:"bytes,3,opt,name=snapshotUri,proto3" json:"snapshotUri,omitempty"`
}

func (x *CreateSnapshotResponse) Reset() {
	*x = CreateSnapshotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSnapshotResponse) ProtoMessage() {}

func (x *CreateSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSnapshotResponse.ProtoReflect.Descriptor instead.
func (*CreateSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{31}
}

func (x *CreateSnapshotResponse) GetSnapshotid() string {
	if x != nil {
		return x.Snapshotid
	}
	return ""
}

func (x *CreateSnapshotResponse) GetSnapshotUri() string {
	if x != nil {
		return x.SnapshotUri
	}
	return ""
}

type CreateSnapshotAndDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider    string            `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Region      string            `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	AccountName string            `protobuf:"bytes,3,opt,name=accountName,proto3" json:"accountName,omitempty"`
	Volumeid    string            `protobuf:"bytes,4,opt,name=volumeid,proto3" json:"volumeid,omitempty"`
	Labels      map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CreateSnapshotAndDeleteRequest) Reset() {
	*x = CreateSnapshotAndDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSnapshotAndDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSnapshotAndDeleteRequest) ProtoMessage() {}

func (x *CreateSnapshotAndDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSnapshotAndDeleteRequest.ProtoReflect.Descriptor instead.
func (*CreateSnapshotAndDeleteRequest) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{32}
}

func (x *CreateSnapshotAndDeleteRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *CreateSnapshotAndDeleteRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *CreateSnapshotAndDeleteRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *CreateSnapshotAndDeleteRequest) GetVolumeid() string {
	if x != nil {
		return x.Volumeid
	}
	return ""
}

func (x *CreateSnapshotAndDeleteRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type CreateSnapshotAndDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Snapshotid string `protobuf:"bytes,1,opt,name=snapshotid,proto3" json:"snapshotid,omitempty"`
	Deleted    bool   `protobuf:"varint,2,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// must retain tag for backward compatibilty, left in commet for reference
	// string error = 3;
	SnapshotUri string `protobuf:"bytes,4,opt,name=snapshotUri,proto3" json:"snapshotUri,omitempty"`
}

func (x *CreateSnapshotAndDeleteResponse) Reset() {
	*x = CreateSnapshotAndDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSnapshotAndDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSnapshotAndDeleteResponse) ProtoMessage() {}

func (x *CreateSnapshotAndDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSnapshotAndDeleteResponse.ProtoReflect.Descriptor instead.
func (*CreateSnapshotAndDeleteResponse) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{33}
}

func (x *CreateSnapshotAndDeleteResponse) GetSnapshotid() string {
	if x != nil {
		return x.Snapshotid
	}
	return ""
}

func (x *CreateSnapshotAndDeleteResponse) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *CreateSnapshotAndDeleteResponse) GetSnapshotUri() string {
	if x != nil {
		return x.SnapshotUri
	}
	return ""
}

type RancherRegistrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterName string `protobuf:"bytes,1,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
}

func (x *RancherRegistrationRequest) Reset() {
	*x = RancherRegistrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RancherRegistrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RancherRegistrationRequest) ProtoMessage() {}

func (x *RancherRegistrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RancherRegistrationRequest.ProtoReflect.Descriptor instead.
func (*RancherRegistrationRequest) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{34}
}

func (x *RancherRegistrationRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

type RancherRegistrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// must retain tag for backward compatibilty, left in commet for reference
	// string error = 1;
	ClusterName string `protobuf:"bytes,2,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	ClusterID   string `protobuf:"bytes,3,opt,name=clusterID,proto3" json:"clusterID,omitempty"`
	ManifestURL string `protobuf:"bytes,4,opt,name=manifestURL,proto3" json:"manifestURL,omitempty"`
}

func (x *RancherRegistrationResponse) Reset() {
	*x = RancherRegistrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RancherRegistrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RancherRegistrationResponse) ProtoMessage() {}

func (x *RancherRegistrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RancherRegistrationResponse.ProtoReflect.Descriptor instead.
func (*RancherRegistrationResponse) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{35}
}

func (x *RancherRegistrationResponse) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *RancherRegistrationResponse) GetClusterID() string {
	if x != nil {
		return x.ClusterID
	}
	return ""
}

func (x *RancherRegistrationResponse) GetManifestURL() string {
	if x != nil {
		return x.ManifestURL
	}
	return ""
}

type GetWorkspacesCostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkspaceIds []string `protobuf:"bytes,1,rep,name=workspaceIds,proto3" json:"workspaceIds,omitempty"`
	Provider     string   `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider,omitempty"`
	AccountName  string   `protobuf:"bytes,3,opt,name=accountName,proto3" json:"accountName,omitempty"`
	StartDate    string   `protobuf:"bytes,4,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate      string   `protobuf:"bytes,5,opt,name=endDate,proto3" json:"endDate,omitempty"`
	Granularity  string   `protobuf:"bytes,6,opt,name=granularity,proto3" json:"granularity,omitempty"`
	CostType     string   `protobuf:"bytes,7,opt,name=costType,proto3" json:"costType,omitempty"`
	GroupBy      *GroupBy `protobuf:"bytes,8,opt,name=groupBy,proto3" json:"groupBy,omitempty"`
}

func (x *GetWorkspacesCostRequest) Reset() {
	*x = GetWorkspacesCostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkspacesCostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkspacesCostRequest) ProtoMessage() {}

func (x *GetWorkspacesCostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkspacesCostRequest.ProtoReflect.Descriptor instead.
func (*GetWorkspacesCostRequest) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{36}
}

func (x *GetWorkspacesCostRequest) GetWorkspaceIds() []string {
	if x != nil {
		return x.WorkspaceIds
	}
	return nil
}

func (x *GetWorkspacesCostRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *GetWorkspacesCostRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *GetWorkspacesCostRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *GetWorkspacesCostRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *GetWorkspacesCostRequest) GetGranularity() string {
	if x != nil {
		return x.Granularity
	}
	return ""
}

func (x *GetWorkspacesCostRequest) GetCostType() string {
	if x != nil {
		return x.CostType
	}
	return ""
}

func (x *GetWorkspacesCostRequest) GetGroupBy() *GroupBy {
	if x != nil {
		return x.GroupBy
	}
	return nil
}

type GroupBy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Key  string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GroupBy) Reset() {
	*x = GroupBy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupBy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupBy) ProtoMessage() {}

func (x *GroupBy) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupBy.ProtoReflect.Descriptor instead.
func (*GroupBy) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{37}
}

func (x *GroupBy) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GroupBy) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetWorkspacesCostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCost   float64            `protobuf:"fixed64,1,opt,name=totalCost,proto3" json:"totalCost,omitempty"`
	GroupedCost map[string]float64 `protobuf:"bytes,2,rep,name=groupedCost,proto3" json:"groupedCost,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
}

func (x *GetWorkspacesCostResponse) Reset() {
	*x = GetWorkspacesCostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkspacesCostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkspacesCostResponse) ProtoMessage() {}

func (x *GetWorkspacesCostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkspacesCostResponse.ProtoReflect.Descriptor instead.
func (*GetWorkspacesCostResponse) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{38}
}

func (x *GetWorkspacesCostResponse) GetTotalCost() float64 {
	if x != nil {
		return x.TotalCost
	}
	return 0
}

func (x *GetWorkspacesCostResponse) GetGroupedCost() map[string]float64 {
	if x != nil {
		return x.GroupedCost
	}
	return nil
}

type AwsCredentials struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessKeyID     string `protobuf:"bytes,1,opt,name=accessKeyID,proto3" json:"accessKeyID,omitempty"`
	SecretAccessKey string `protobuf:"bytes,2,opt,name=secretAccessKey,proto3" json:"secretAccessKey,omitempty"`
	Token           string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *AwsCredentials) Reset() {
	*x = AwsCredentials{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AwsCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsCredentials) ProtoMessage() {}

func (x *AwsCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsCredentials.ProtoReflect.Descriptor instead.
func (*AwsCredentials) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{39}
}

func (x *AwsCredentials) GetAccessKeyID() string {
	if x != nil {
		return x.AccessKeyID
	}
	return ""
}

func (x *AwsCredentials) GetSecretAccessKey() string {
	if x != nil {
		return x.SecretAccessKey
	}
	return ""
}

func (x *AwsCredentials) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type AzureCredentials struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionID string `protobuf:"bytes,1,opt,name=subscriptionID,proto3" json:"subscriptionID,omitempty"`
	TenantID       string `protobuf:"bytes,2,opt,name=tenantID,proto3" json:"tenantID,omitempty"`
	ClientID       string `protobuf:"bytes,3,opt,name=clientID,proto3" json:"clientID,omitempty"`
	ClientSecret   string `protobuf:"bytes,4,opt,name=clientSecret,proto3" json:"clientSecret,omitempty"`
	ResourceGroup  string `protobuf:"bytes,5,opt,name=resourceGroup,proto3" json:"resourceGroup,omitempty"`
}

func (x *AzureCredentials) Reset() {
	*x = AzureCredentials{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AzureCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AzureCredentials) ProtoMessage() {}

func (x *AzureCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AzureCredentials.ProtoReflect.Descriptor instead.
func (*AzureCredentials) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{40}
}

func (x *AzureCredentials) GetSubscriptionID() string {
	if x != nil {
		return x.SubscriptionID
	}
	return ""
}

func (x *AzureCredentials) GetTenantID() string {
	if x != nil {
		return x.TenantID
	}
	return ""
}

func (x *AzureCredentials) GetClientID() string {
	if x != nil {
		return x.ClientID
	}
	return ""
}

func (x *AzureCredentials) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *AzureCredentials) GetResourceGroup() string {
	if x != nil {
		return x.ResourceGroup
	}
	return ""
}

type GcpCredentials struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectID   string `protobuf:"bytes,1,opt,name=projectID,proto3" json:"projectID,omitempty"`
	Certificate string `protobuf:"bytes,2,opt,name=certificate,proto3" json:"certificate,omitempty"`
}

func (x *GcpCredentials) Reset() {
	*x = GcpCredentials{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GcpCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GcpCredentials) ProtoMessage() {}

func (x *GcpCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GcpCredentials.ProtoReflect.Descriptor instead.
func (*GcpCredentials) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{41}
}

func (x *GcpCredentials) GetProjectID() string {
	if x != nil {
		return x.ProjectID
	}
	return ""
}

func (x *GcpCredentials) GetCertificate() string {
	if x != nil {
		return x.Certificate
	}
	return ""
}

type WriteCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Provider string `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider,omitempty"`
	// Types that are assignable to Cred:
	//	*WriteCredentialRequest_AwsCred
	//	*WriteCredentialRequest_AzureCred
	//	*WriteCredentialRequest_GcpCred
	Cred isWriteCredentialRequest_Cred `protobuf_oneof:"cred"`
}

func (x *WriteCredentialRequest) Reset() {
	*x = WriteCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteCredentialRequest) ProtoMessage() {}

func (x *WriteCredentialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteCredentialRequest.ProtoReflect.Descriptor instead.
func (*WriteCredentialRequest) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{42}
}

func (x *WriteCredentialRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *WriteCredentialRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (m *WriteCredentialRequest) GetCred() isWriteCredentialRequest_Cred {
	if m != nil {
		return m.Cred
	}
	return nil
}

func (x *WriteCredentialRequest) GetAwsCred() *AwsCredentials {
	if x, ok := x.GetCred().(*WriteCredentialRequest_AwsCred); ok {
		return x.AwsCred
	}
	return nil
}

func (x *WriteCredentialRequest) GetAzureCred() *AzureCredentials {
	if x, ok := x.GetCred().(*WriteCredentialRequest_AzureCred); ok {
		return x.AzureCred
	}
	return nil
}

func (x *WriteCredentialRequest) GetGcpCred() *GcpCredentials {
	if x, ok := x.GetCred().(*WriteCredentialRequest_GcpCred); ok {
		return x.GcpCred
	}
	return nil
}

type isWriteCredentialRequest_Cred interface {
	isWriteCredentialRequest_Cred()
}

type WriteCredentialRequest_AwsCred struct {
	AwsCred *AwsCredentials `protobuf:"bytes,3,opt,name=awsCred,proto3,oneof"`
}

type WriteCredentialRequest_AzureCred struct {
	AzureCred *AzureCredentials `protobuf:"bytes,4,opt,name=azureCred,proto3,oneof"`
}

type WriteCredentialRequest_GcpCred struct {
	GcpCred *GcpCredentials `protobuf:"bytes,5,opt,name=gcpCred,proto3,oneof"`
}

func (*WriteCredentialRequest_AwsCred) isWriteCredentialRequest_Cred() {}

func (*WriteCredentialRequest_AzureCred) isWriteCredentialRequest_Cred() {}

func (*WriteCredentialRequest_GcpCred) isWriteCredentialRequest_Cred() {}

type WriteCredentialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *WriteCredentialResponse) Reset() {
	*x = WriteCredentialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteCredentialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteCredentialResponse) ProtoMessage() {}

func (x *WriteCredentialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteCredentialResponse.ProtoReflect.Descriptor instead.
func (*WriteCredentialResponse) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{43}
}

func (x *WriteCredentialResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ReadCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Provider string `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (x *ReadCredentialRequest) Reset() {
	*x = ReadCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadCredentialRequest) ProtoMessage() {}

func (x *ReadCredentialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadCredentialRequest.ProtoReflect.Descriptor instead.
func (*ReadCredentialRequest) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{44}
}

func (x *ReadCredentialRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *ReadCredentialRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

type ReadCredentialResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Provider string `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider,omitempty"`
	// Types that are assignable to Cred:
	//	*ReadCredentialResponse_AwsCred
	//	*ReadCredentialResponse_AzureCred
	//	*ReadCredentialResponse_GcpCred
	Cred isReadCredentialResponse_Cred `protobuf_oneof:"cred"`
}

func (x *ReadCredentialResponse) Reset() {
	*x = ReadCredentialResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadCredentialResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadCredentialResponse) ProtoMessage() {}

func (x *ReadCredentialResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadCredentialResponse.ProtoReflect.Descriptor instead.
func (*ReadCredentialResponse) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{45}
}

func (x *ReadCredentialResponse) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *ReadCredentialResponse) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (m *ReadCredentialResponse) GetCred() isReadCredentialResponse_Cred {
	if m != nil {
		return m.Cred
	}
	return nil
}

func (x *ReadCredentialResponse) GetAwsCred() *AwsCredentials {
	if x, ok := x.GetCred().(*ReadCredentialResponse_AwsCred); ok {
		return x.AwsCred
	}
	return nil
}

func (x *ReadCredentialResponse) GetAzureCred() *AzureCredentials {
	if x, ok := x.GetCred().(*ReadCredentialResponse_AzureCred); ok {
		return x.AzureCred
	}
	return nil
}

func (x *ReadCredentialResponse) GetGcpCred() *GcpCredentials {
	if x, ok := x.GetCred().(*ReadCredentialResponse_GcpCred); ok {
		return x.GcpCred
	}
	return nil
}

type isReadCredentialResponse_Cred interface {
	isReadCredentialResponse_Cred()
}

type ReadCredentialResponse_AwsCred struct {
	AwsCred *AwsCredentials `protobuf:"bytes,3,opt,name=awsCred,proto3,oneof"`
}

type ReadCredentialResponse_AzureCred struct {
	AzureCred *AzureCredentials `protobuf:"bytes,4,opt,name=azureCred,proto3,oneof"`
}

type ReadCredentialResponse_GcpCred struct {
	GcpCred *GcpCredentials `protobuf:"bytes,5,opt,name=gcpCred,proto3,oneof"`
}

func (*ReadCredentialResponse_AwsCred) isReadCredentialResponse_Cred() {}

func (*ReadCredentialResponse_AzureCred) isReadCredentialResponse_Cred() {}

func (*ReadCredentialResponse_GcpCred) isReadCredentialResponse_Cred() {}

type GetKubeConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider    string `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Region      string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	AccountName string `protobuf:"bytes,3,opt,name=accountName,proto3" json:"accountName,omitempty"`
	ClusterName string `protobuf:"bytes,4,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
}

func (x *GetKubeConfigRequest) Reset() {
	*x = GetKubeConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKubeConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKubeConfigRequest) ProtoMessage() {}

func (x *GetKubeConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKubeConfigRequest.ProtoReflect.Descriptor instead.
func (*GetKubeConfigRequest) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{46}
}

func (x *GetKubeConfigRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *GetKubeConfigRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *GetKubeConfigRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *GetKubeConfigRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

type GetKubeConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterName string `protobuf:"bytes,1,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	Config      []byte `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *GetKubeConfigResponse) Reset() {
	*x = GetKubeConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKubeConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKubeConfigResponse) ProtoMessage() {}

func (x *GetKubeConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKubeConfigResponse.ProtoReflect.Descriptor instead.
func (*GetKubeConfigResponse) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{47}
}

func (x *GetKubeConfigResponse) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *GetKubeConfigResponse) GetConfig() []byte {
	if x != nil {
		return x.Config
	}
	return nil
}

type TagNodeInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TagNodeInstanceResponse) Reset() {
	*x = TagNodeInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagNodeInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagNodeInstanceResponse) ProtoMessage() {}

func (x *TagNodeInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagNodeInstanceResponse.ProtoReflect.Descriptor instead.
func (*TagNodeInstanceResponse) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{48}
}

type TagNodeInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider    string            `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Region      string            `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	AccountName string            `protobuf:"bytes,3,opt,name=accountName,proto3" json:"accountName,omitempty"`
	ClusterName string            `protobuf:"bytes,4,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	NodeGroup   string            `protobuf:"bytes,5,opt,name=nodeGroup,proto3" json:"nodeGroup,omitempty"`
	Labels      map[string]string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TagNodeInstanceRequest) Reset() {
	*x = TagNodeInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagNodeInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagNodeInstanceRequest) ProtoMessage() {}

func (x *TagNodeInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_netbookai_spawner_spawner_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagNodeInstanceRequest.ProtoReflect.Descriptor instead.
func (*TagNodeInstanceRequest) Descriptor() ([]byte, []int) {
	return file_proto_netbookai_spawner_spawner_proto_rawDescGZIP(), []int{49}
}

func (x *TagNodeInstanceRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *TagNodeInstanceRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *TagNodeInstanceRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *TagNodeInstanceRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *TagNodeInstanceRequest) GetNodeGroup() string {
	if x != nil {
		return x.NodeGroup
	}
	return ""
}

func (x *TagNodeInstanceRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

var File_proto_netbookai_spawner_spawner_proto protoreflect.FileDescriptor

var file_proto_netbookai_spawner_spawner_proto_rawDesc = []byte{
	0x0a, 0x25, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6e, 0x65, 0x74, 0x62, 0x6f, 0x6f, 0x6b, 0x61,
	0x69, 0x2f, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2f, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72,
	0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1f, 0x0a, 0x0b, 0x45, 0x63, 0x68,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x20, 0x0a, 0x0c, 0x45, 0x63,
	0x68, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x88, 0x05, 0x0a,
	0x08, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73,
	0x6b, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69, 0x73,
	0x6b, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x70, 0x41, 0x64, 0x64, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x70, 0x41,
	0x64, 0x64, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x7a, 0x6f, 0x6e, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x35, 0x0a,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x70, 0x65, 0x63,
	0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x70, 0x75, 0x5f, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x67, 0x70, 0x75, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x33,
	0x0a, 0x0a, 0x6d, 0x69, 0x67, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x13, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x4d, 0x49, 0x47,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0a, 0x6d, 0x69, 0x67, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x0c, 0x63, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x15, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69,
	0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x70, 0x6f, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x70, 0x6f,
	0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x39, 0x0a, 0x0b,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5f, 0x0a, 0x05, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x73, 0x22, 0x2e, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x12, 0x24, 0x0a, 0x05, 0x69, 0x73, 0x73, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x52, 0x05, 0x69, 0x73, 0x73, 0x75, 0x65, 0x22, 0xa7, 0x02, 0x0a, 0x0e, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12,
	0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x70, 0x61,
	0x77, 0x6e, 0x65, 0x72, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x8b, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x6a, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x6e, 0x0a, 0x0b,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2d, 0x0a,
	0x08, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x70,
	0x65, 0x63, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x70, 0x65, 0x63, 0x22, 0x47, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x52, 0x08, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x73, 0x22, 0x6f, 0x0a, 0x0f, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x6f,
	0x64, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x8e, 0x01, 0x0a, 0x14, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x45, 0x0a, 0x15, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x67,
	0x0a, 0x0f, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x40, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x89, 0x01, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x44,
	0x61, 0x74, 0x61, 0x22, 0xa9, 0x01, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x35, 0x33, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x48, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x35, 0x33, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xb9, 0x01, 0x0a, 0x10, 0x4e, 0x6f,
	0x64, 0x65, 0x53, 0x70, 0x61, 0x77, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x53, 0x70,
	0x65, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e,
	0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x08, 0x6e, 0x6f, 0x64,
	0x65, 0x53, 0x70, 0x65, 0x63, 0x22, 0x29, 0x0a, 0x11, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x70, 0x61,
	0x77, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0xb0, 0x01, 0x0a, 0x14, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x22, 0x2d, 0x0a, 0x15, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0xb1, 0x01, 0x0a, 0x11, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x6f, 0x64, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2a, 0x0a, 0x12, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0xb2, 0x03, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2a, 0x0a, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x69, 0x64,
	0x12, 0x40, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x55, 0x72,
	0x69, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x55, 0x72, 0x69, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x1a, 0x39, 0x0a, 0x0b,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6b, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x72,
	0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x55, 0x72, 0x69, 0x22, 0x87, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x69, 0x64, 0x22, 0x46,
	0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x88, 0x02, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x69, 0x64, 0x12, 0x42, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x5a, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x55, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x55, 0x72, 0x69, 0x22, 0x9a, 0x02,
	0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x41, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x69, 0x64, 0x12, 0x4b, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x41, 0x6e, 0x64, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a,
	0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7d, 0x0a, 0x1f, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x41, 0x6e, 0x64, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x55, 0x72, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x55, 0x72, 0x69, 0x22, 0x3e, 0x0a, 0x1a, 0x52, 0x61, 0x6e,
	0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x7f, 0x0a, 0x1b, 0x52, 0x61, 0x6e,
	0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x6e, 0x69,
	0x66, 0x65, 0x73, 0x74, 0x55, 0x52, 0x4c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d,
	0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x55, 0x52, 0x4c, 0x22, 0x9e, 0x02, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x43, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x2a, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x42, 0x79, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x22, 0x2f, 0x0a, 0x07, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xd0, 0x01, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x43, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x43, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x65, 0x64, 0x43, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e,
	0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x73, 0x43, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x43, 0x6f, 0x73, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x43, 0x6f, 0x73, 0x74, 0x1a,
	0x3e, 0x0a, 0x10, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x43, 0x6f, 0x73, 0x74, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x72, 0x0a, 0x0e, 0x41, 0x77, 0x73, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65,
	0x79, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0xbc, 0x01, 0x0a, 0x10, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x0d,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x22, 0x50, 0x0a, 0x0e, 0x47, 0x63, 0x70, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x22, 0xfb, 0x01, 0x0a, 0x16, 0x57, 0x72, 0x69, 0x74, 0x65, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x07, 0x61, 0x77, 0x73, 0x43, 0x72, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72,
	0x2e, 0x41, 0x77, 0x73, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x48,
	0x00, 0x52, 0x07, 0x61, 0x77, 0x73, 0x43, 0x72, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x09, 0x61, 0x7a,
	0x75, 0x72, 0x65, 0x43, 0x72, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x09, 0x61, 0x7a, 0x75, 0x72,
	0x65, 0x43, 0x72, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x07, 0x67, 0x63, 0x70, 0x43, 0x72, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72,
	0x2e, 0x47, 0x63, 0x70, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x48,
	0x00, 0x52, 0x07, 0x67, 0x63, 0x70, 0x43, 0x72, 0x65, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x63, 0x72,
	0x65, 0x64, 0x22, 0x2f, 0x0a, 0x17, 0x57, 0x72, 0x69, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0x4d, 0x0a, 0x15, 0x52, 0x65, 0x61, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x22, 0xfb, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x61, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x07, 0x61, 0x77, 0x73, 0x43, 0x72, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x41,
	0x77, 0x73, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x48, 0x00, 0x52,
	0x07, 0x61, 0x77, 0x73, 0x43, 0x72, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x09, 0x61, 0x7a, 0x75, 0x72,
	0x65, 0x43, 0x72, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x70,
	0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x09, 0x61, 0x7a, 0x75, 0x72, 0x65, 0x43,
	0x72, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x07, 0x67, 0x63, 0x70, 0x43, 0x72, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x47,
	0x63, 0x70, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x48, 0x00, 0x52,
	0x07, 0x67, 0x63, 0x70, 0x43, 0x72, 0x65, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x63, 0x72, 0x65, 0x64,
	0x22, 0x8e, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4b, 0x75, 0x62, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x51, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4b, 0x75, 0x62, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x22, 0x19, 0x0a, 0x17, 0x54, 0x61, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xae, 0x02, 0x0a, 0x16, 0x54, 0x61, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x43, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x54, 0x61, 0x67, 0x4e, 0x6f,
	0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x2a, 0x50, 0x0a, 0x0a, 0x4d, 0x49, 0x47, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4d,
	0x49, 0x47, 0x31, 0x67, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x49, 0x47, 0x32, 0x67, 0x10,
	0x02, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x49, 0x47, 0x33, 0x67, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05,
	0x4d, 0x49, 0x47, 0x34, 0x67, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x49, 0x47, 0x37, 0x67,
	0x10, 0x05, 0x2a, 0x36, 0x0a, 0x0c, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x55, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x4e, 0x44, 0x45, 0x4d, 0x41, 0x4e, 0x44, 0x10, 0x01,
	0x12, 0x08, 0x0a, 0x04, 0x53, 0x50, 0x4f, 0x54, 0x10, 0x02, 0x32, 0xda, 0x0d, 0x0a, 0x0e, 0x53,
	0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2f, 0x0a,
	0x0b, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x0e, 0x2e, 0x73,
	0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0e, 0x2e, 0x73,
	0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x35,
	0x0a, 0x04, 0x45, 0x63, 0x68, 0x6f, 0x12, 0x14, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72,
	0x2e, 0x45, 0x63, 0x68, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x73,
	0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x45, 0x63, 0x68, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72,
	0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x08, 0x41,
	0x64, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65,
	0x72, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x2e, 0x73, 0x70, 0x61,
	0x77, 0x6e, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x59, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x35, 0x33, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e,
	0x41, 0x64, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x35, 0x33, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65,
	0x72, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x35, 0x33, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0a,
	0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x73, 0x70, 0x61,
	0x77, 0x6e, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72,
	0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x70, 0x65, 0x63, 0x22, 0x00, 0x12, 0x4a,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x2e,
	0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x70, 0x61,
	0x77, 0x6e, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x07, 0x41, 0x64,
	0x64, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x53, 0x70, 0x61, 0x77, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53,
	0x70, 0x61, 0x77, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50,
	0x0a, 0x0d, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1d, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x50, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x12, 0x1d, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x47, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65,
	0x12, 0x1a, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73,
	0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1c, 0x2e, 0x73, 0x70,
	0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x70, 0x61, 0x77,
	0x6e, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0c, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1c, 0x2e, 0x73, 0x70, 0x61,
	0x77, 0x6e, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e,
	0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x1e, 0x2e, 0x73, 0x70,
	0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x70,
	0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e,
	0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x41, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x27, 0x2e, 0x73, 0x70, 0x61, 0x77,
	0x6e, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x41, 0x6e, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x41, 0x6e, 0x64, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62,
	0x0a, 0x13, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x57, 0x69, 0x74, 0x68, 0x52, 0x61,
	0x6e, 0x63, 0x68, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e,
	0x52, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x70, 0x61,
	0x77, 0x6e, 0x65, 0x72, 0x2e, 0x52, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x73, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65,
	0x72, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x43,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x70, 0x61,
	0x77, 0x6e, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x73, 0x43, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x56, 0x0a, 0x0f, 0x57, 0x72, 0x69, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x12, 0x1f, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0e, 0x52, 0x65, 0x61, 0x64,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x1e, 0x2e, 0x73, 0x70, 0x61,
	0x77, 0x6e, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x70, 0x61,
	0x77, 0x6e, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x4b, 0x75, 0x62, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d,
	0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x75, 0x62, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x75, 0x62, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x56, 0x0a, 0x0f, 0x54, 0x61, 0x67, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x1f, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x54, 0x61, 0x67,
	0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x65, 0x72, 0x2e, 0x54, 0x61,
	0x67, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0a, 0x5a, 0x08, 0x2f, 0x73, 0x70, 0x61, 0x77,
	0x6e, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_netbookai_spawner_spawner_proto_rawDescOnce sync.Once
	file_proto_netbookai_spawner_spawner_proto_rawDescData = file_proto_netbookai_spawner_spawner_proto_rawDesc
)

func file_proto_netbookai_spawner_spawner_proto_rawDescGZIP() []byte {
	file_proto_netbookai_spawner_spawner_proto_rawDescOnce.Do(func() {
		file_proto_netbookai_spawner_spawner_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_netbookai_spawner_spawner_proto_rawDescData)
	})
	return file_proto_netbookai_spawner_spawner_proto_rawDescData
}

var file_proto_netbookai_spawner_spawner_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_netbookai_spawner_spawner_proto_msgTypes = make([]protoimpl.MessageInfo, 57)
var file_proto_netbookai_spawner_spawner_proto_goTypes = []interface{}{
	(MIGProfile)(0),                         // 0: spawner.MIGProfile
	(CapacityType)(0),                       // 1: spawner.CapacityType
	(*Empty)(nil),                           // 2: spawner.Empty
	(*EchoRequest)(nil),                     // 3: spawner.EchoRequest
	(*EchoResponse)(nil),                    // 4: spawner.EchoResponse
	(*NodeSpec)(nil),                        // 5: spawner.NodeSpec
	(*Issue)(nil),                           // 6: spawner.Issue
	(*Health)(nil),                          // 7: spawner.Health
	(*ClusterRequest)(nil),                  // 8: spawner.ClusterRequest
	(*GetClusterRequest)(nil),               // 9: spawner.GetClusterRequest
	(*GetClustersRequest)(nil),              // 10: spawner.GetClustersRequest
	(*ClusterSpec)(nil),                     // 11: spawner.ClusterSpec
	(*GetClustersResponse)(nil),             // 12: spawner.GetClustersResponse
	(*ClusterResponse)(nil),                 // 13: spawner.ClusterResponse
	(*ClusterStatusRequest)(nil),            // 14: spawner.ClusterStatusRequest
	(*ClusterStatusResponse)(nil),           // 15: spawner.ClusterStatusResponse
	(*AddTokenRequest)(nil),                 // 16: spawner.AddTokenRequest
	(*AddTokenResponse)(nil),                // 17: spawner.AddTokenResponse
	(*GetTokenRequest)(nil),                 // 18: spawner.GetTokenRequest
	(*GetTokenResponse)(nil),                // 19: spawner.GetTokenResponse
	(*AddRoute53RecordRequest)(nil),         // 20: spawner.AddRoute53RecordRequest
	(*AddRoute53RecordResponse)(nil),        // 21: spawner.AddRoute53RecordResponse
	(*NodeSpawnRequest)(nil),                // 22: spawner.NodeSpawnRequest
	(*NodeSpawnResponse)(nil),               // 23: spawner.NodeSpawnResponse
	(*ClusterDeleteRequest)(nil),            // 24: spawner.ClusterDeleteRequest
	(*ClusterDeleteResponse)(nil),           // 25: spawner.ClusterDeleteResponse
	(*NodeDeleteRequest)(nil),               // 26: spawner.NodeDeleteRequest
	(*NodeDeleteResponse)(nil),              // 27: spawner.NodeDeleteResponse
	(*CreateVolumeRequest)(nil),             // 28: spawner.CreateVolumeRequest
	(*CreateVolumeResponse)(nil),            // 29: spawner.CreateVolumeResponse
	(*DeleteVolumeRequest)(nil),             // 30: spawner.DeleteVolumeRequest
	(*DeleteVolumeResponse)(nil),            // 31: spawner.DeleteVolumeResponse
	(*CreateSnapshotRequest)(nil),           // 32: spawner.CreateSnapshotRequest
	(*CreateSnapshotResponse)(nil),          // 33: spawner.CreateSnapshotResponse
	(*CreateSnapshotAndDeleteRequest)(nil),  // 34: spawner.CreateSnapshotAndDeleteRequest
	(*CreateSnapshotAndDeleteResponse)(nil), // 35: spawner.CreateSnapshotAndDeleteResponse
	(*RancherRegistrationRequest)(nil),      // 36: spawner.RancherRegistrationRequest
	(*RancherRegistrationResponse)(nil),     // 37: spawner.RancherRegistrationResponse
	(*GetWorkspacesCostRequest)(nil),        // 38: spawner.GetWorkspacesCostRequest
	(*GroupBy)(nil),                         // 39: spawner.GroupBy
	(*GetWorkspacesCostResponse)(nil),       // 40: spawner.GetWorkspacesCostResponse
	(*AwsCredentials)(nil),                  // 41: spawner.AwsCredentials
	(*AzureCredentials)(nil),                // 42: spawner.AzureCredentials
	(*GcpCredentials)(nil),                  // 43: spawner.GcpCredentials
	(*WriteCredentialRequest)(nil),          // 44: spawner.WriteCredentialRequest
	(*WriteCredentialResponse)(nil),         // 45: spawner.WriteCredentialResponse
	(*ReadCredentialRequest)(nil),           // 46: spawner.ReadCredentialRequest
	(*ReadCredentialResponse)(nil),          // 47: spawner.ReadCredentialResponse
	(*GetKubeConfigRequest)(nil),            // 48: spawner.GetKubeConfigRequest
	(*GetKubeConfigResponse)(nil),           // 49: spawner.GetKubeConfigResponse
	(*TagNodeInstanceResponse)(nil),         // 50: spawner.TagNodeInstanceResponse
	(*TagNodeInstanceRequest)(nil),          // 51: spawner.TagNodeInstanceRequest
	nil,                                     // 52: spawner.NodeSpec.LabelsEntry
	nil,                                     // 53: spawner.ClusterRequest.LabelsEntry
	nil,                                     // 54: spawner.CreateVolumeRequest.LabelsEntry
	nil,                                     // 55: spawner.CreateSnapshotRequest.LabelsEntry
	nil,                                     // 56: spawner.CreateSnapshotAndDeleteRequest.LabelsEntry
	nil,                                     // 57: spawner.GetWorkspacesCostResponse.GroupedCostEntry
	nil,                                     // 58: spawner.TagNodeInstanceRequest.LabelsEntry
}
var file_proto_netbookai_spawner_spawner_proto_depIdxs = []int32{
	52, // 0: spawner.NodeSpec.labels:type_name -> spawner.NodeSpec.LabelsEntry
	7,  // 1: spawner.NodeSpec.health:type_name -> spawner.Health
	0,  // 2: spawner.NodeSpec.migProfile:type_name -> spawner.MIGProfile
	1,  // 3: spawner.NodeSpec.capacityType:type_name -> spawner.CapacityType
	6,  // 4: spawner.Health.issue:type_name -> spawner.Issue
	5,  // 5: spawner.ClusterRequest.node:type_name -> spawner.NodeSpec
	53, // 6: spawner.ClusterRequest.labels:type_name -> spawner.ClusterRequest.LabelsEntry
	5,  // 7: spawner.ClusterSpec.nodeSpec:type_name -> spawner.NodeSpec
	11, // 8: spawner.GetClustersResponse.clusters:type_name -> spawner.ClusterSpec
	5,  // 9: spawner.NodeSpawnRequest.nodeSpec:type_name -> spawner.NodeSpec
	54, // 10: spawner.CreateVolumeRequest.labels:type_name -> spawner.CreateVolumeRequest.LabelsEntry
	55, // 11: spawner.CreateSnapshotRequest.labels:type_name -> spawner.CreateSnapshotRequest.LabelsEntry
	56, // 12: spawner.CreateSnapshotAndDeleteRequest.labels:type_name -> spawner.CreateSnapshotAndDeleteRequest.LabelsEntry
	39, // 13: spawner.GetWorkspacesCostRequest.groupBy:type_name -> spawner.GroupBy
	57, // 14: spawner.GetWorkspacesCostResponse.groupedCost:type_name -> spawner.GetWorkspacesCostResponse.GroupedCostEntry
	41, // 15: spawner.WriteCredentialRequest.awsCred:type_name -> spawner.AwsCredentials
	42, // 16: spawner.WriteCredentialRequest.azureCred:type_name -> spawner.AzureCredentials
	43, // 17: spawner.WriteCredentialRequest.gcpCred:type_name -> spawner.GcpCredentials
	41, // 18: spawner.ReadCredentialResponse.awsCred:type_name -> spawner.AwsCredentials
	42, // 19: spawner.ReadCredentialResponse.azureCred:type_name -> spawner.AzureCredentials
	43, // 20: spawner.ReadCredentialResponse.gcpCred:type_name -> spawner.GcpCredentials
	58, // 21: spawner.TagNodeInstanceRequest.labels:type_name -> spawner.TagNodeInstanceRequest.LabelsEntry
	2,  // 22: spawner.SpawnerService.HealthCheck:input_type -> spawner.Empty
	3,  // 23: spawner.SpawnerService.Echo:input_type -> spawner.EchoRequest
	8,  // 24: spawner.SpawnerService.CreateCluster:input_type -> spawner.ClusterRequest
	16, // 25: spawner.SpawnerService.AddToken:input_type -> spawner.AddTokenRequest
	18, // 26: spawner.SpawnerService.GetToken:input_type -> spawner.GetTokenRequest
	20, // 27: spawner.SpawnerService.AddRoute53Record:input_type -> spawner.AddRoute53RecordRequest
	9,  // 28: spawner.SpawnerService.GetCluster:input_type -> spawner.GetClusterRequest
	10, // 29: spawner.SpawnerService.GetClusters:input_type -> spawner.GetClustersRequest
	22, // 30: spawner.SpawnerService.AddNode:input_type -> spawner.NodeSpawnRequest
	14, // 31: spawner.SpawnerService.ClusterStatus:input_type -> spawner.ClusterStatusRequest
	24, // 32: spawner.SpawnerService.DeleteCluster:input_type -> spawner.ClusterDeleteRequest
	26, // 33: spawner.SpawnerService.DeleteNode:input_type -> spawner.NodeDeleteRequest
	28, // 34: spawner.SpawnerService.CreateVolume:input_type -> spawner.CreateVolumeRequest
	30, // 35: spawner.SpawnerService.DeleteVolume:input_type -> spawner.DeleteVolumeRequest
	32, // 36: spawner.SpawnerService.CreateSnapshot:input_type -> spawner.CreateSnapshotRequest
	34, // 37: spawner.SpawnerService.CreateSnapshotAndDelete:input_type -> spawner.CreateSnapshotAndDeleteRequest
	36, // 38: spawner.SpawnerService.RegisterWithRancher:input_type -> spawner.RancherRegistrationRequest
	38, // 39: spawner.SpawnerService.GetWorkspacesCost:input_type -> spawner.GetWorkspacesCostRequest
	44, // 40: spawner.SpawnerService.WriteCredential:input_type -> spawner.WriteCredentialRequest
	46, // 41: spawner.SpawnerService.ReadCredential:input_type -> spawner.ReadCredentialRequest
	48, // 42: spawner.SpawnerService.GetKubeConfig:input_type -> spawner.GetKubeConfigRequest
	51, // 43: spawner.SpawnerService.TagNodeInstance:input_type -> spawner.TagNodeInstanceRequest
	2,  // 44: spawner.SpawnerService.HealthCheck:output_type -> spawner.Empty
	4,  // 45: spawner.SpawnerService.Echo:output_type -> spawner.EchoResponse
	13, // 46: spawner.SpawnerService.CreateCluster:output_type -> spawner.ClusterResponse
	17, // 47: spawner.SpawnerService.AddToken:output_type -> spawner.AddTokenResponse
	19, // 48: spawner.SpawnerService.GetToken:output_type -> spawner.GetTokenResponse
	21, // 49: spawner.SpawnerService.AddRoute53Record:output_type -> spawner.AddRoute53RecordResponse
	11, // 50: spawner.SpawnerService.GetCluster:output_type -> spawner.ClusterSpec
	12, // 51: spawner.SpawnerService.GetClusters:output_type -> spawner.GetClustersResponse
	23, // 52: spawner.SpawnerService.AddNode:output_type -> spawner.NodeSpawnResponse
	15, // 53: spawner.SpawnerService.ClusterStatus:output_type -> spawner.ClusterStatusResponse
	25, // 54: spawner.SpawnerService.DeleteCluster:output_type -> spawner.ClusterDeleteResponse
	27, // 55: spawner.SpawnerService.DeleteNode:output_type -> spawner.NodeDeleteResponse
	29, // 56: spawner.SpawnerService.CreateVolume:output_type -> spawner.CreateVolumeResponse
	31, // 57: spawner.SpawnerService.DeleteVolume:output_type -> spawner.DeleteVolumeResponse
	33, // 58: spawner.SpawnerService.CreateSnapshot:output_type -> spawner.CreateSnapshotResponse
	35, // 59: spawner.SpawnerService.CreateSnapshotAndDelete:output_type -> spawner.CreateSnapshotAndDeleteResponse
	37, // 60: spawner.SpawnerService.RegisterWithRancher:output_type -> spawner.RancherRegistrationResponse
	40, // 61: spawner.SpawnerService.GetWorkspacesCost:output_type -> spawner.GetWorkspacesCostResponse
	45, // 62: spawner.SpawnerService.WriteCredential:output_type -> spawner.WriteCredentialResponse
	47, // 63: spawner.SpawnerService.ReadCredential:output_type -> spawner.ReadCredentialResponse
	49, // 64: spawner.SpawnerService.GetKubeConfig:output_type -> spawner.GetKubeConfigResponse
	50, // 65: spawner.SpawnerService.TagNodeInstance:output_type -> spawner.TagNodeInstanceResponse
	44, // [44:66] is the sub-list for method output_type
	22, // [22:44] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_proto_netbookai_spawner_spawner_proto_init() }
func file_proto_netbookai_spawner_spawner_proto_init() {
	if File_proto_netbookai_spawner_spawner_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_netbookai_spawner_spawner_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EchoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EchoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Issue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Health); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClustersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClustersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRoute53RecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRoute53RecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeSpawnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeSpawnResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVolumeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVolumeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVolumeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVolumeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSnapshotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSnapshotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSnapshotAndDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSnapshotAndDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RancherRegistrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RancherRegistrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkspacesCostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupBy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkspacesCostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AwsCredentials); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AzureCredentials); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GcpCredentials); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteCredentialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadCredentialResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKubeConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKubeConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagNodeInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_netbookai_spawner_spawner_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagNodeInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_netbookai_spawner_spawner_proto_msgTypes[42].OneofWrappers = []interface{}{
		(*WriteCredentialRequest_AwsCred)(nil),
		(*WriteCredentialRequest_AzureCred)(nil),
		(*WriteCredentialRequest_GcpCred)(nil),
	}
	file_proto_netbookai_spawner_spawner_proto_msgTypes[45].OneofWrappers = []interface{}{
		(*ReadCredentialResponse_AwsCred)(nil),
		(*ReadCredentialResponse_AzureCred)(nil),
		(*ReadCredentialResponse_GcpCred)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_netbookai_spawner_spawner_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   57,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_netbookai_spawner_spawner_proto_goTypes,
		DependencyIndexes: file_proto_netbookai_spawner_spawner_proto_depIdxs,
		EnumInfos:         file_proto_netbookai_spawner_spawner_proto_enumTypes,
		MessageInfos:      file_proto_netbookai_spawner_spawner_proto_msgTypes,
	}.Build()
	File_proto_netbookai_spawner_spawner_proto = out.File
	file_proto_netbookai_spawner_spawner_proto_rawDesc = nil
	file_proto_netbookai_spawner_spawner_proto_goTypes = nil
	file_proto_netbookai_spawner_spawner_proto_depIdxs = nil
}
